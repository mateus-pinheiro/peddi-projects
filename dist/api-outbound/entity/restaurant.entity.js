"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose_1 = require("mongoose");
const address = new mongoose_1.Schema({
    zipcode: Number,
    street: String,
    number: Number,
    complement: String,
    district: String,
    city: String,
    state: String
});
const contact = new mongoose_1.Schema({
    name: String,
    description: String,
    phone: Number,
    email: String
});
const ingredient = new mongoose_1.Schema({
    epoc_id: Number,
    name: String,
    price: Number,
    type: String
});
const product = new mongoose_1.Schema({
    epoc_id: Number,
    name: String,
    image: String,
    description: String,
    featured: Boolean,
    price: Number,
    ingredients: [ingredient]
});
const subCategory = new mongoose_1.Schema({
    name: String,
    products: [product]
});
const category = new mongoose_1.Schema({
    name: String,
    image: String,
    subCategory: [subCategory]
});
const responsibleEmployee = new mongoose_1.Schema({
    epoc_id: String,
    name: String
});
const restaurantEntity = new mongoose_1.Schema({
    restaurant_id_cloud: Number,
    hash: String,
    name: {
        type: String,
        required: false
    },
    cnpj: {
        type: Number,
        required: false
    },
    number_of_tables: {
        type: Number,
        required: false
    },
    number_of_employees: {
        type: Number,
        required: false
    },
    status: {
        type: Boolean,
        required: false
    },
    image: {
        type: String,
        required: false
    },
    // mensalidade: {
    //     type: String,
    //     required: false
    // },
    categories: [category],
    contact: [contact],
    responsibleEmployee: [responsibleEmployee],
    address: address
});
exports.RestaurantEntity = mongoose_1.model("restaurant", restaurantEntity, "restaurant", true);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcGktb3V0Ym91bmQvZW50aXR5L3Jlc3RhdXJhbnQuZW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQTBEO0FBRTFELE1BQU0sT0FBTyxHQUFHLElBQUksaUJBQU0sQ0FBQztJQUN2QixPQUFPLEVBQUUsTUFBTTtJQUNmLE1BQU0sRUFBRSxNQUFNO0lBQ2QsTUFBTSxFQUFFLE1BQU07SUFDZCxVQUFVLEVBQUUsTUFBTTtJQUNsQixRQUFRLEVBQUUsTUFBTTtJQUNoQixJQUFJLEVBQUUsTUFBTTtJQUNaLEtBQUssRUFBRSxNQUFNO0NBQ2hCLENBQUMsQ0FBQztBQUVILE1BQU0sT0FBTyxHQUFHLElBQUksaUJBQU0sQ0FBQztJQUN2QixJQUFJLEVBQUUsTUFBTTtJQUNaLFdBQVcsRUFBRSxNQUFNO0lBQ25CLEtBQUssRUFBRSxNQUFNO0lBQ2IsS0FBSyxFQUFFLE1BQU07Q0FDaEIsQ0FBQyxDQUFBO0FBRUYsTUFBTSxVQUFVLEdBQUcsSUFBSSxpQkFBTSxDQUFDO0lBQzFCLE9BQU8sRUFBRSxNQUFNO0lBQ2YsSUFBSSxFQUFFLE1BQU07SUFDWixLQUFLLEVBQUUsTUFBTTtJQUNiLElBQUksRUFBRSxNQUFNO0NBQ2YsQ0FBQyxDQUFDO0FBRUgsTUFBTSxPQUFPLEdBQUcsSUFBSSxpQkFBTSxDQUFDO0lBQ3ZCLE9BQU8sRUFBRSxNQUFNO0lBQ2YsSUFBSSxFQUFFLE1BQU07SUFDWixLQUFLLEVBQUUsTUFBTTtJQUNiLFdBQVcsRUFBRSxNQUFNO0lBQ25CLFFBQVEsRUFBRSxPQUFPO0lBQ2pCLEtBQUssRUFBRSxNQUFNO0lBQ2IsV0FBVyxFQUFFLENBQUMsVUFBVSxDQUFDO0NBQzVCLENBQUMsQ0FBQTtBQUVGLE1BQU0sV0FBVyxHQUFHLElBQUksaUJBQU0sQ0FBQztJQUMzQixJQUFJLEVBQUUsTUFBTTtJQUNaLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQztDQUN0QixDQUFDLENBQUM7QUFFSCxNQUFNLFFBQVEsR0FBRyxJQUFJLGlCQUFNLENBQUM7SUFDeEIsSUFBSSxFQUFFLE1BQU07SUFDWixLQUFLLEVBQUUsTUFBTTtJQUNiLFdBQVcsRUFBRSxDQUFDLFdBQVcsQ0FBQztDQUM3QixDQUFDLENBQUE7QUFFRixNQUFNLG1CQUFtQixHQUFHLElBQUksaUJBQU0sQ0FBQztJQUNuQyxPQUFPLEVBQUUsTUFBTTtJQUNmLElBQUksRUFBRSxNQUFNO0NBQ2YsQ0FBQyxDQUFBO0FBRUYsTUFBTSxnQkFBZ0IsR0FBVyxJQUFJLGlCQUFNLENBQUM7SUFDeEMsbUJBQW1CLEVBQUcsTUFBTTtJQUM1QixJQUFJLEVBQUcsTUFBTTtJQUNiLElBQUksRUFBRTtRQUNGLElBQUksRUFBRSxNQUFNO1FBQ1osUUFBUSxFQUFFLEtBQUs7S0FDbEI7SUFDRCxJQUFJLEVBQUU7UUFDRixJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSxLQUFLO0tBQ2xCO0lBQ0QsZ0JBQWdCLEVBQUU7UUFDZCxJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSxLQUFLO0tBQ2xCO0lBQ0QsbUJBQW1CLEVBQUU7UUFDakIsSUFBSSxFQUFFLE1BQU07UUFDWixRQUFRLEVBQUUsS0FBSztLQUNsQjtJQUNELE1BQU0sRUFBRTtRQUNKLElBQUksRUFBRSxPQUFPO1FBQ2IsUUFBUSxFQUFFLEtBQUs7S0FDbEI7SUFDRCxLQUFLLEVBQUU7UUFDSCxJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSxLQUFLO0tBQ2xCO0lBQ0QsaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixzQkFBc0I7SUFDdEIsS0FBSztJQUNMLFVBQVUsRUFBRSxDQUFDLFFBQVEsQ0FBQztJQUN0QixPQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUM7SUFDbEIsbUJBQW1CLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztJQUMxQyxPQUFPLEVBQUUsT0FBTztDQUNuQixDQUFDLENBQUM7QUFFVSxRQUFBLGdCQUFnQixHQUFlLGdCQUFLLENBQUMsWUFBWSxFQUFFLGdCQUFnQixFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQyIsImZpbGUiOiJhcGktb3V0Ym91bmQvZW50aXR5L3Jlc3RhdXJhbnQuZW50aXR5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hLCBEb2N1bWVudCwgTW9kZWwsIG1vZGVsIH0gZnJvbSBcIm1vbmdvb3NlXCI7XG5cbmNvbnN0IGFkZHJlc3MgPSBuZXcgU2NoZW1hKHtcbiAgICB6aXBjb2RlOiBOdW1iZXIsXG4gICAgc3RyZWV0OiBTdHJpbmcsXG4gICAgbnVtYmVyOiBOdW1iZXIsXG4gICAgY29tcGxlbWVudDogU3RyaW5nLFxuICAgIGRpc3RyaWN0OiBTdHJpbmcsXG4gICAgY2l0eTogU3RyaW5nLFxuICAgIHN0YXRlOiBTdHJpbmdcbn0pO1xuXG5jb25zdCBjb250YWN0ID0gbmV3IFNjaGVtYSh7XG4gICAgbmFtZTogU3RyaW5nLFxuICAgIGRlc2NyaXB0aW9uOiBTdHJpbmcsXG4gICAgcGhvbmU6IE51bWJlcixcbiAgICBlbWFpbDogU3RyaW5nXG59KVxuXG5jb25zdCBpbmdyZWRpZW50ID0gbmV3IFNjaGVtYSh7XG4gICAgZXBvY19pZDogTnVtYmVyLFxuICAgIG5hbWU6IFN0cmluZyxcbiAgICBwcmljZTogTnVtYmVyLFxuICAgIHR5cGU6IFN0cmluZ1xufSk7XG5cbmNvbnN0IHByb2R1Y3QgPSBuZXcgU2NoZW1hKHtcbiAgICBlcG9jX2lkOiBOdW1iZXIsXG4gICAgbmFtZTogU3RyaW5nLFxuICAgIGltYWdlOiBTdHJpbmcsXG4gICAgZGVzY3JpcHRpb246IFN0cmluZyxcbiAgICBmZWF0dXJlZDogQm9vbGVhbixcbiAgICBwcmljZTogTnVtYmVyLFxuICAgIGluZ3JlZGllbnRzOiBbaW5ncmVkaWVudF1cbn0pXG5cbmNvbnN0IHN1YkNhdGVnb3J5ID0gbmV3IFNjaGVtYSh7XG4gICAgbmFtZTogU3RyaW5nLFxuICAgIHByb2R1Y3RzOiBbcHJvZHVjdF1cbn0pO1xuXG5jb25zdCBjYXRlZ29yeSA9IG5ldyBTY2hlbWEoe1xuICAgIG5hbWU6IFN0cmluZyxcbiAgICBpbWFnZTogU3RyaW5nLFxuICAgIHN1YkNhdGVnb3J5OiBbc3ViQ2F0ZWdvcnldXG59KVxuXG5jb25zdCByZXNwb25zaWJsZUVtcGxveWVlID0gbmV3IFNjaGVtYSh7XG4gICAgZXBvY19pZDogU3RyaW5nLFxuICAgIG5hbWU6IFN0cmluZ1xufSlcblxuY29uc3QgcmVzdGF1cmFudEVudGl0eTogU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgcmVzdGF1cmFudF9pZF9jbG91ZCA6IE51bWJlcixcbiAgICBoYXNoIDogU3RyaW5nLFxuICAgIG5hbWU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogZmFsc2VcbiAgICB9LFxuICAgIGNucGo6IHtcbiAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICByZXF1aXJlZDogZmFsc2VcbiAgICB9LFxuICAgIG51bWJlcl9vZl90YWJsZXM6IHtcbiAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICByZXF1aXJlZDogZmFsc2VcbiAgICB9LFxuICAgIG51bWJlcl9vZl9lbXBsb3llZXM6IHtcbiAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICByZXF1aXJlZDogZmFsc2VcbiAgICB9LFxuICAgIHN0YXR1czoge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICByZXF1aXJlZDogZmFsc2VcbiAgICB9LFxuICAgIGltYWdlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IGZhbHNlXG4gICAgfSxcbiAgICAvLyBtZW5zYWxpZGFkZToge1xuICAgIC8vICAgICB0eXBlOiBTdHJpbmcsXG4gICAgLy8gICAgIHJlcXVpcmVkOiBmYWxzZVxuICAgIC8vIH0sXG4gICAgY2F0ZWdvcmllczogW2NhdGVnb3J5XSxcbiAgICBjb250YWN0OiBbY29udGFjdF0sXG4gICAgcmVzcG9uc2libGVFbXBsb3llZTogW3Jlc3BvbnNpYmxlRW1wbG95ZWVdLFxuICAgIGFkZHJlc3M6IGFkZHJlc3Ncbn0pO1xuXG5leHBvcnQgY29uc3QgUmVzdGF1cmFudEVudGl0eTogTW9kZWw8YW55PiA9IG1vZGVsKFwicmVzdGF1cmFudFwiLCByZXN0YXVyYW50RW50aXR5LCBcInJlc3RhdXJhbnRcIiwgdHJ1ZSk7XG4iXX0=
